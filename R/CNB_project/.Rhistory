geom_bar(stat = "identity", position = "stack") +
labs(
title = "Dekompozice českého exportu (2015-2014)",
x = "Rok",
y = "Podíl v %",
fill = "Období",
caption = "Zdroj: ČSÚ" # <- tady je poznámka
) +
scale_fill_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "top",
legend.title = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.caption = element_text(hjust = 0, face = "italic", size = 10) # <- přidané pro caption
)
print(graf_zeme)
ggsave(filename = "grafy/graf_zeme.png", plot = graf_zeme,
width = 10, height = 6, dpi = 300)
# Vykreslení všech proměnných ##################################################
data_long <- data %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold")
) +
labs(
title = "Časové řady",
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED"
)  +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
)
print(CARA)
ggsave(filename = "grafy/vsechny_CARA.png", plot = CARA, width = 13,
height = 10, dpi = 300)
# Transformace dat #############################################################
data$df_l_y_ger <- c(NA, diff(log(data$HDPger)))
data$df_l_y_pl <- c(NA, diff(log(data$HDPpl)))
data$df_l_y_fr <- c(NA, diff(log(data$HDPfr)))
data$df_l_y_us <- c(NA, diff(log(data$HDPus)))
data$df_l_z <- c(NA, diff(log(data$REER)))
data$df_l_X <- c(NA, diff(log(data$Export)))
# Testy stacionarity $##########################################################
variables <- c("df_l_y_ger", "df_l_y_pl", "df_l_y_fr", "df_l_y_us", "df_l_z", "df_l_X")
adf_results <- data.frame(
Variable = character(),
P_Value = numeric(),
Stationary = character(),
stringsAsFactors = FALSE
)
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Variable = var,
P_Value = p_value,
Stationary = stationary
))
}
adf_results
# Vykreslení transformovaných proměnných #######################################
data_long <- data %>%
select(date, df_l_y_ger, df_l_y_pl, df_l_y_fr, df_l_y_us, df_l_z, df_l_X) %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA_diff <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff)
ggsave(filename = "grafy/transformovane_CARA.png", plot = CARA_diff, width = 13,
height = 10, dpi = 300)
# VAR model s dummy proměnnou ##################################################
data <- data %>%
mutate(COVID_dummy = ifelse(date >= as.Date("2020-01-01") &
date <= as.Date("2022-12-31"), 1, 0))
var_data <- data %>%
select(df_l_X, df_l_y_ger, df_l_y_pl, df_l_y_fr, df_l_y_us, df_l_z) %>%
drop_na()  # odstraníme počáteční NAs po diferenciaci
exog_data <- data %>%
select(COVID_dummy) %>%
filter(!is.na(data$df_l_X))  # exogenní dummy musí mít stejnou délku jako VAR data
# VÝBĚR OPTIMÁLNÍHO LAGU PODLE BIC ----------------------------------
# Výběr lagů, maximálně 8
lag_selection <- VARselect(var_data, lag.max = 8, type = "const", exogen = exog_data)
lag_selection$criteria
# Optimální lag podle BIC
optimal_lag <- lag_selection$selection["SC(n)"]
print(paste0("Optimální počet lagů podle BIC: ", optimal_lag))
# ODHAD VAR MODELU --------------------------------------------------
# Estimace VAR modelu s exogenní COVID dummy
var_model <- VAR(var_data, p = 2, type = "const", exogen = exog_data)
# Výsledky
summary(var_model)
# ANALÝZA MODELU ----------------------------------------------------
# Impulse response function (například šok v HDP Německa na český export)
irf_result <- irf(var_model, impulse = "df_l_y_ger", response = "df_l_X", n.ahead = 12, boot = TRUE)
# Graf IRF
plot(irf_result)
# Variance decomposition
fevd_result <- fevd(var_model, n.ahead = 12)
# Variance decomposition pro df_l_X (český export)
fevd_result$df_l_X
# Volitelně: graf variance decomposition
plot(fevd_result)
data$df_l_z_demean <- data$df_l_z - mean(data$df_l_z, na.rm = TRUE)
adf.test(data$df_l_z_demean, alternative = "stationary")
adf.test(na.omit(data$df_l_z_demean), alternative = "stationary")
library(urca)
kpss.test(na.omit(data$df_l_z_demean))
data$df_l_y_ger <- c(NA, diff(log(data$HDPger)))
data$df_l_y_pl <- c(NA, diff(log(data$HDPpl)))
data$df_l_y_fr <- c(NA, diff(log(data$HDPfr)))
data$df_l_y_us <- c(NA, diff(log(data$HDPus)))
data$df_l_z <- c(NA, diff(log(data$REER)))
data$df_l_X <- c(NA, diff(log(data$Export)))
data$df_l_z<- data$df_l_z - mean(data$df_l_z, na.rm = TRUE)
data_long <- data %>%
select(date, df_l_y_ger, df_l_y_pl, df_l_y_fr, df_l_y_us, df_l_z, df_l_X) %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA_diff <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff)
ggsave(filename = "grafy/transformovane_CARA.png", plot = CARA_diff, width = 13,
height = 10, dpi = 300)
variables <- c("df_l_y_ger", "df_l_y_pl", "df_l_y_fr", "df_l_y_us", "df_l_z", "df_l_X")
adf_results <- data.frame(
Variable = character(),
P_Value = numeric(),
Stationary = character(),
stringsAsFactors = FALSE
)
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Variable = var,
P_Value = p_value,
Stationary = stationary
))
}
adf_results
library(urca)
adf_model <- ur.df(na.omit(data$df_l_z), type = "drift", lags = 1)  # nebo "none", nebo "trend"
summary(adf_model)
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Proměnná = var,
p-hodnota = p_value,
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Proměnná = var,
p_hodnota = p_value,
Stacionarita = stationary
))
}
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Variable = var,
P_Value = p_value,
Stationary = stationary
))
}
adf_results
adf_model <- ur.df(na.omit(data$df_l_z), type = "drift", lags = "trend")  # nebo "none", nebo "trend"
adf_model <- ur.df(na.omit(data$df_l_z), type = "drift", lags = 1)  # nebo "none", nebo "trend"
summary(adf_model)
################################################################################
########################## HYBATELÉ ČESKÉHO EXPORTU ############################
############################### Petr Chaloupek #################################
################################################################################
rm(list = ls())
cat("\014")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Načtení knihoven #############################################################
library(tidyverse)
library(readxl)
library(fredr)
library(ggplot2)
library(dplyr)
library(tibble)
library(scales)
library(tseries)
library(vars)
library(lubridate)
library(urca)
# Načtení dat ##################################################################
ZahranicniObchod <- read_excel("ZahranicniObchodBezneCeny.xlsx",
col_types = c("text", "numeric",
"numeric", "numeric",
"numeric", "numeric",
"numeric", "numeric",
"numeric", "numeric",
"numeric"))
HDPger <- fredr(
series_id = "CLVMNACSCAB1GQDE",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
#HDPsk <- fredr(
#  series_id = "CLVMNACSAB1GQSK",
#  observation_start = as.Date("2009-01-01"),
#  observation_end = as.Date("2020-09-30"),
#  frequency = "q"
#)
HDPpl <- fredr(
series_id = "CLVMNACSCAB1GQPL",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
HDPfr <- fredr(
series_id = "CLVMNACSCAB1GQFR",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
HDPus <- fredr(
series_id = "GDPC1",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
REER <- fredr(
series_id = "RBCZBIS",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
Export <- fredr(
series_id = "NAEXKP06CZQ652S",
observation_start = as.Date("2005-01-01"),
observation_end = as.Date("2024-01-01"),
frequency = "q"
)
y_ger <- HDPger %>% select(date, HDPger = value)
y_pl <- HDPpl %>% select(date, HDPpl = value)
y_fr <- HDPfr %>% select(date, HDPfr = value)
y_us <- HDPus %>% select(date, HDPus = value)
reer <- REER %>% select(date, REER = value)
ex <- Export %>% select(date, Export = value)
data <- y_ger %>%
left_join(y_pl, by = "date") %>%
left_join(y_fr, by = "date") %>%
left_join(y_us, by = "date") %>%
left_join(reer, by = "date") %>%
left_join(ex, by = "date")
# Dekompozice exportu podle států ##############################################
data_ZahranicniObchod <- ZahranicniObchod %>%
mutate(Date = seq(as.Date("2015-01-01"), by = "quarter", length.out = nrow(.)))
data_zeme <- data_ZahranicniObchod %>%
mutate(
Celkem = Nemecko + Slovensko + Polsko + Francie + USA + Zbytek
) %>%
pivot_longer(
cols = c(Nemecko, Slovensko, Polsko, Francie, USA, Zbytek),
names_to = "Zeme",
values_to = "Hodnota"
) %>%
mutate(
Hodnota_podíl = Hodnota / Celkem,
Zeme = factor(
case_when(
Zeme == "Nemecko" ~ "Německo",
Zeme == "Zbytek" ~ "Ostatní",
TRUE ~ Zeme
),
levels = c("Německo", "Slovensko", "Polsko", "Francie", "USA", "Ostatní")
)
)
graf_zeme <- data_zeme %>%
ggplot(aes(x = Date, y = Hodnota_podíl, fill = Zeme)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Dekompozice českého exportu (2015-2024)",
x = "Rok",
y = "Podíl v %",
fill = "Období",
caption = "Zdroj: ČSÚ" # <- tady je poznámka
) +
scale_fill_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "top",
legend.title = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.caption = element_text(hjust = 0, face = "italic", size = 10) # <- přidané pro caption
)
print(graf_zeme)
ggsave(filename = "grafy/graf_zeme.png", plot = graf_zeme,
width = 10, height = 6, dpi = 300)
# Vykreslení všech proměnných ##################################################
data_long <- data %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold")
) +
labs(
title = "Časové řady",
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED"
)  +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
)
print(CARA)
ggsave(filename = "grafy/vsechny_CARA.png", plot = CARA, width = 13,
height = 10, dpi = 300)
# Transformace dat #############################################################
data$df_l_y_ger <- c(NA, diff(log(data$HDPger)))
data$df_l_y_pl <- c(NA, diff(log(data$HDPpl)))
data$df_l_y_fr <- c(NA, diff(log(data$HDPfr)))
data$df_l_y_us <- c(NA, diff(log(data$HDPus)))
data$df_l_z <- c(NA, diff(log(data$REER)))
data$df_l_z<- data$df_l_z - mean(data$df_l_z, na.rm = TRUE)
data$df_l_X <- c(NA, diff(log(data$Export)))
# Testy stacionarity $##########################################################
variables <- c("df_l_y_ger", "df_l_y_pl", "df_l_y_fr", "df_l_y_us", "df_l_z", "df_l_X")
adf_results <- data.frame(
Variable = character(),
P_Value = numeric(),
Stationary = character(),
stringsAsFactors = FALSE
)
for (var in variables) {
series <- na.omit(data[[var]]) # odstraníme NA
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Variable = var,
P_Value = p_value,
Stationary = stationary
))
}
adf_results
# Vykreslení transformovaných proměnných #######################################
data_long <- data %>%
select(date, df_l_y_ger, df_l_y_pl, df_l_y_fr, df_l_y_us, df_l_z, df_l_X) %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA_diff <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff)
ggsave(filename = "grafy/transformovane_CARA.png", plot = CARA_diff, width = 13,
height = 10, dpi = 300)
ARA_diff <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "2 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff)
CARA_diff <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 3, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "BrBG") +
scale_x_date(date_breaks = "5 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff)
write.table(adf_table, file = "tabulky/adf_results.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(adf_results, file = "tabulky/adf_results.txt", sep = "\t", row.names = FALSE, quote = FALSE)
