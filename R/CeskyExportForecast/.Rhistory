left_join(y_au, by = "date") %>%
left_join(y_sp, by = "date") %>%
left_join(reer, by = "date") %>%
left_join(ex, by = "date")
data$eurozona <- 0.63 * data$HDPger + 0.11 * data$HDPfr + 0.10 * data$HDPit +
0.09 * data$HDPau + 0.07 * data$HDPsp
data <- data %>%
mutate(Export = ((Export / 26)/1000000))
# Vykreslení všech proměnných ##################################################
data_long <- data %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA2 <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 4, ncol = 2, scales = "free_y") +
scale_color_brewer(palette = "RdBu") +
scale_x_date(date_breaks = "5 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold")
) +
labs(
title = "Časové řady",
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)  +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
)
print(CARA2)
ggsave(filename = "grafy/vsechny_CARA2.png", plot = CARA2, width = 13,
height = 10, dpi = 300)
# Transformace dat #############################################################
data$l_y <- log(data$eurozona)
data$l_z <- log(data$REER)
data$l_x <- log(data$Export)
data$df_l_y <- c(NA, diff(data$l_y))
data$df_l_z <- c(NA, diff(data$l_z))
data$df_l_x <- c(NA, diff(data$l_x))
data$df_l_z <- data$df_l_z - mean(data$df_l_z, na.rm = TRUE)
ts_l_y <- ts(data$l_y, start = c(2005, 1), frequency = 4)
ts_l_z <- ts(data$l_z, start = c(2005, 1), frequency = 4)
ts_l_x <- ts(data$l_x, start = c(2005, 1), frequency = 4)
hp_l_y <- hpfilter(ts_l_y, freq = 1600)
hp_l_z <- hpfilter(ts_l_z, freq = 1600)
hp_l_x <- hpfilter(ts_l_x, freq = 1600)
data$l_y_gap <- as.numeric(hp_l_y$cycle)
data$l_z_gap <- as.numeric(hp_l_z$cycle)
data$l_x_gap <- as.numeric(hp_l_x$cycle)
# Testy stacionerity ###########################################################
variables <- c("df_l_y", "df_l_z", "df_l_x", "l_y_gap", "l_z_gap", "l_x_gap")
adf_results <- data.frame(
Variable = character(),
P_Value = numeric(),
Stationary = character(),
stringsAsFactors = FALSE
)
for (var in variables) {
series <- na.omit(data[[var]])
test_result <- adf.test(series)
p_value <- test_result$p.value
stationary <- ifelse(p_value < 0.05, "Ano", "Ne")
adf_results <- rbind(adf_results, data.frame(
Variable = var,
P_Value = p_value,
Stationary = stationary
))
}
adf_results
write.table(adf_results, file = "tabulky/vysledky_ADF_testu2.txt", sep = "\t",
row.names = FALSE, quote = FALSE)
# Vykreslení transformovaných proměnných #######################################
data_long <- data %>%
dplyr::select(date, df_l_y, df_l_z, df_l_x) %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA_diff2 <- data_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 4, ncol = 2, scales = "free_y") +
scale_color_manual(values = custom_cols) +
scale_x_date(date_breaks = "5 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Datum",
y = "Hodnota",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_diff2)
ggsave(filename = "grafy/transformovane_CARA_diff2.png", plot = CARA_diff2,
width = 13, height = 10, dpi = 300)
# Vykreslení gapu proměnných ###################################################
data_gap_long <- data %>%
dplyr::select(date, l_y_gap, l_x_gap, l_z_gap) %>%
pivot_longer(
cols = -date,
names_to = "variable",
values_to = "value"
)
CARA_gap2 <- data_gap_long %>%
ggplot(aes(x = date, y = value, color = variable)) +
geom_line(size = 1.2) +
facet_wrap(~variable, nrow = 2, ncol = 2, scales = "free_y") +
scale_color_manual(values = custom_cols) +
scale_x_date(date_breaks = "5 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none",
strip.text = element_text(face = "bold"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = "GAP",
x = "Datum",
y = "Gap v %",
caption = "Zdroj: FRED, vlastní výpočty"
)
print(CARA_gap2)
ggsave(filename = "grafy/gap_CARA_gap2.png", plot = CARA_gap2, width = 13,
height = 10, dpi = 300)
# Korelogram Diff proměnných ###################################################
variables <- unique(data_long$variable)
lagged_correlations <- expand_grid(
lag = 0:8,
var1 = variables,
var2 = variables
) %>%
mutate(correlation = pmap_dbl(list(var1, var2, lag), function(v1, v2, l) {
df_wide <- data_long %>%
filter(variable %in% c(v1, v2)) %>%
pivot_wider(names_from = variable, values_from = value) %>%
mutate(across(all_of(v2), ~ lag(.x, l)))
cor(df_wide[[v1]], df_wide[[v2]], use = "complete.obs")
}))
corr_diff <- ggplot(lagged_correlations, aes(x = var2, y = var1,
fill = correlation)) +
geom_tile() +
geom_text(aes(label = round(correlation, 2)), size = 4) +
facet_wrap(~ lag) +
scale_fill_gradient2(low = "#670A20", mid = "#f5f5f5", high = "#2166AD",
midpoint = 0, limits = c(-1, 1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "right",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.spacing = unit(1, "lines"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression(Delta * log("proměnná")),
x = "Zpožděná proměnná",
y = "Aktuální proměnná",
fill = "Korelace",
caption = "Zdroj: Vlastní výpočty"
)
print(corr_diff)
ggsave(filename = "grafy/korelogram_diff2.png", plot = corr_diff,
width = 13, height = 10, dpi = 300)
# Korelogram Gap proměnných ####################################################
variables_gap <- unique(data_gap_long$variable)
lagged_correlations_gap <- expand_grid(
lag = 0:8,
var1 = variables_gap,
var2 = variables_gap
) %>%
mutate(correlation = pmap_dbl(list(var1, var2, lag), function(v1, v2, l) {
df_wide <- data_gap_long %>%
filter(variable %in% c(v1, v2)) %>%
pivot_wider(names_from = variable, values_from = value) %>%
mutate(across(all_of(v2), ~ lag(.x, l)))
cor(df_wide[[v1]], df_wide[[v2]], use = "complete.obs")
}))
corr_gap <- ggplot(lagged_correlations_gap, aes(x = var2, y = var1,
fill = correlation)) +
geom_tile() +
geom_text(aes(label = round(correlation, 2)), size = 4) +
facet_wrap(~ lag) +
scale_fill_gradient2(low = "#670A20", mid = "#f5f5f5", high = "#2166AD",
midpoint = 0, limits = c(-1, 1)) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "right",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.spacing = unit(1, "lines"),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = "Gap proměnná",
x = "Zpožděná proměnná",
y = "Aktuální proměnná",
fill = "Korelace",
caption = "Zdroj: Vlastní výpočty"
)
print(corr_gap)
ggsave(filename = "grafy/korelogram_gap2.png", plot = corr_gap,
width = 13, height = 10, dpi = 300)
# Diff VAR model ###############################################################
var_diff_data <- data[, c("df_l_y", "df_l_z", "df_l_x")]
var_diff_data_ts <- ts(var_diff_data, start = c(2005, 1), frequency = 4)
var_diff_data_ts <- na.omit(var_diff_data_ts)
# Vytvoření dummy proměnné COVID
start_time <- start(var_diff_data_ts)
n_obs <- nrow(var_diff_data_ts)
years <- floor((0:(n_obs - 1)) / 4) + start_time[1]
quarters <- ((0:(n_obs - 1)) %% 4) + 1
COVID <- ifelse(years >= 2020 & quarters >= 2 | years > 2020, 1, 0)
COVID <- matrix(COVID, ncol = 1)
modely <- list()
bic_values_diff <- numeric()
sink("tabulky/Diff_VAR_modely2.txt")
cat("--------------------------------------------------\n")
cat("VAR modely s df_l_x jako vysvětlovanou proměnnou\n")
cat("--------------------------------------------------\n\n")
for (p in 1:8) {
var_model <- VAR(var_diff_data_ts, p = p, type = "const", exogen = COVID)
modely[[p]] <- var_model
bic_values_diff[p] <- BIC(var_model)
summary_df_l_x <- summary(var_model)$varresult$df_l_x
cat("============================================\n")
cat(paste("VAR model se zpožděním p =", p, "\n"))
cat("BIC modelu:", round(bic_values_diff[p], 4), "\n")
cat("--------------------------------------------\n")
print(summary_df_l_x)
cat("\n\n")
}
best_p <- which.min(bic_values_diff)
cat("============================================\n")
cat(paste("Nejlepší model podle BIC má zpoždění p =", best_p, "\n"))
cat("BIC hodnoty pro všechna zpoždění:\n")
print(round(bic_values_diff, 4))
sink()
best_model_diff <- modely[[best_p]]
# IRF nejlepsiho modelu
irf_result <- irf(best_model_diff, impulse = NULL, response = "df_l_x",
n.ahead = 10, boot = TRUE, ci = 0.95)
irf_data_diff <- lapply(names(irf_result$irf), function(impulse_name) {
data.frame(
impulse = impulse_name,
period = 0:10,
response = irf_result$irf[[impulse_name]][, "df_l_x"],
lower = irf_result$Lower[[impulse_name]][, "df_l_x"],
upper = irf_result$Upper[[impulse_name]][, "df_l_x"]
)
}) %>% bind_rows()
IRF_diff_var <- ggplot(irf_data_diff, aes(x = period, y = response)) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = "#D6614D", alpha = 0.5) +
geom_line(color = "#670A20", size = 1.2) +
facet_wrap(~ impulse, nrow = 2, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = percent_format(accuracy = 0.1)) +
scale_x_continuous(breaks = 0:10) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
strip.text = element_text(face = "bold"),
legend.position = "none",
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression("Impulsní odezvy diff VAR modelu"),
x = "Období",
y = "Relativní změna",
caption = "Zdroj: vlastní výpočty"
)
print(IRF_diff_var)
ggsave(filename = "grafy/IRF_diff_VAR2.png", plot = IRF_diff_var, width = 13,
height = 10, dpi = 300)
# Gap VAR model ################################################################
var_gap_data <- data[, c("l_y_gap", "l_z_gap", "l_x_gap")]
var_gap_data_ts <- ts(var_gap_data, start = c(2005, 1), frequency = 4)
var_gap_data_ts <- na.omit(var_gap_data_ts)
# Vytvoření dummy proměnné COVID
start_time <- start(var_gap_data_ts)
n_obs <- nrow(var_gap_data_ts)
years <- floor((0:(n_obs - 1)) / 4) + start_time[1]
quarters <- ((0:(n_obs - 1)) %% 4) + 1
COVID <- ifelse(years >= 2020 & quarters >= 2 | years > 2020, 1, 0)
COVID <- matrix(COVID, ncol = 1)
modely <- list()
bic_values_gap <- numeric()
sink("tabulky/Gap_VAR_modely2.txt")
cat("--------------------------------------------------\n")
cat("VAR modely s l_x_gap jako vysvětlovanou proměnnou\n")
cat("--------------------------------------------------\n\n")
for (p in 1:8) {
var_model <- VAR(var_gap_data_ts, p = p, type = "const", exogen = COVID)
modely[[p]] <- var_model
bic_values_gap[p] <- BIC(var_model)
summary_l_x_gap <- summary(var_model)$varresult$l_x_gap
cat("============================================\n")
cat(paste("VAR model se zpožděním p =", p, "\n"))
cat("BIC modelu:", round(bic_values_gap[p], 4), "\n")
cat("--------------------------------------------\n")
print(summary_l_x_gap)
cat("\n\n")
}
best_p <- which.min(bic_values_gap)
cat("============================================\n")
cat(paste("Nejlepší model podle BIC má zpoždění p =", best_p, "\n"))
cat("BIC hodnoty pro všechna zpoždění:\n")
print(round(bic_values_gap, 4))
sink()
best_model <- modely[[best_p]]
# IRF nejlepšího modelu
irf_result <- irf(best_model, impulse = NULL, response = "l_x_gap",
n.ahead = 10, boot = TRUE, ci = 0.95)
irf_data <- lapply(names(irf_result$irf), function(impulse_name) {
data.frame(
impulse = impulse_name,
period = 0:10,
response = irf_result$irf[[impulse_name]][, "l_x_gap"],
lower = irf_result$Lower[[impulse_name]][, "l_x_gap"],
upper = irf_result$Upper[[impulse_name]][, "l_x_gap"]
)
}) %>% bind_rows()
IRF_gap_var <- ggplot(irf_data, aes(x = period, y = response)) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = "#2166AD", alpha = 0.5) +
geom_line(color = "#073061", size = 1.2) +
facet_wrap(~ impulse, nrow = 2, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = percent_format(accuracy = 0.1)) +
scale_x_continuous(breaks = 0:10) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
strip.text = element_text(face = "bold"),
legend.position = "none",
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
) +
labs(
title = expression("Impulsní odezvy Gap VAR modelu"),
x = "Období",
y = "Relativní změna",
caption = "Zdroj: vlastní výpočty"
)
print(IRF_gap_var)
ggsave(filename = "grafy/IRF_gap_VAR2.png", plot = IRF_gap_var,
width = 13, height = 10, dpi = 300)
# Porovnání modelů #############################################################
best_bic_diff <- min(bic_values_diff)
best_bic_gap <- min(bic_values_gap)
sink("tabulky/porovnani_modelu2.txt")
cat("--------------------------------------------------\n")
cat("Nejlepší BIC pro Gap model:", round(best_bic_gap, 4), "\n")
cat("Nejlepší BIC pro Diff model:", round(best_bic_diff, 4), "\n")
cat("--------------------------------------------------\n")
if (best_bic_diff < best_bic_gap) {
cat("Diff model má lepší fit podle BIC.\n")
} else {
cat("Gap model má lepší fit podle BIC.\n")
}
cat("--------------------------------------------------\n")
sink()
# Predikční výkonnost Diff VAR modelu ##########################################
start_forecast_index_diff <- 45  # Q1 2016
actual_diff <- var_diff_data_ts[, "df_l_x"]
n_obs_diff <- length(actual_diff)
pred_values_diff <- rep(NA, n_obs_diff)
forecast_errors_diff <- rep(NA, n_obs_diff)
for (i in start_forecast_index_diff:(n_obs_diff - 1)) {
train_data_diff <- var_diff_data_ts[1:i, ]
var_model_diff <- VAR(train_data_diff, p = best_model_diff$p, type = "const")
fc_diff <- predict(var_model_diff, n.ahead = 1)
pred_diff <- fc_diff$fcst$df_l_x[1, "fcst"]
if (!is.na(pred_diff) && is.finite(pred_diff)) {
pred_values_diff[i + 1] <- pred_diff
forecast_errors_diff[i + 1] <- actual_diff[i + 1] - pred_diff
}
}
forecast_df_diff <- data.frame(
time = time(actual_diff),
actual = as.numeric(actual_diff),
prediction = pred_values_diff,
error = forecast_errors_diff
)
# Predikční výkonnost Gap VAR modelu ###########################################
start_forecast_index_gap <- 45  # Q1 2016
actual_gap <- var_gap_data_ts[, "l_x_gap"]
n_obs_gap <- length(actual_gap)
pred_values_gap <- rep(NA, n_obs_gap)
forecast_errors_gap <- rep(NA, n_obs_gap)
for (i in start_forecast_index_gap:(n_obs_gap - 1)) {
train_data_gap <- var_gap_data_ts[1:i, ]
var_model_gap <- VAR(train_data_gap, p = best_model$p, type = "const")
fc_gap <- predict(var_model_gap, n.ahead = 1)
pred_gap <- fc_gap$fcst$l_x_gap[1, "fcst"]
if (!is.na(pred_gap) && is.finite(pred_gap)) {
pred_values_gap[i + 1] <- pred_gap
forecast_errors_gap[i + 1] <- actual_gap[i + 1] - pred_gap
}
}
forecast_df_gap <- data.frame(
time = time(actual_gap),
actual = as.numeric(actual_gap),
prediction = pred_values_gap,
error = forecast_errors_gap
)
# Vizualizace a uložení chyb predikcí ##########################################
forecast_df_plot_diff <- forecast_df_diff[!is.na(forecast_df_diff$prediction), ]
forecast_df_plot_diff$time_date <- as.Date(as.yearqtr(forecast_df_plot_diff$time),
frac = 0)
diff_var_forecast <- ggplot(forecast_df_plot_diff, aes(x = time_date)) +
geom_line(aes(y = actual, color = "Skutečnost"), size = 1.2) +
geom_line(aes(y = prediction, color = "Predikce"), size = 1.2,
linetype = "dashed") +
scale_color_manual(values = c("Skutečnost" = "#670A20",
"Predikce" = "#D6614D")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = percent_format(accuracy = 0.1)) +
labs(
title = expression(Delta * log("X")),
x = "Datum",
y = "Hodnota",
color = NULL,
caption = "Zdroj: vlastní výpočty"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
)
forecast_df_plot_gap <- forecast_df_gap[!is.na(forecast_df_gap$prediction), ]
forecast_df_plot_gap$time_date <- as.Date(as.yearqtr(forecast_df_plot_gap$time),
frac = 0)
gap_var_forecast <- ggplot(forecast_df_plot_gap, aes(x = time_date)) +
geom_line(aes(y = actual, color = "Skutečnost"), size = 1.2) +
geom_line(aes(y = prediction, color = "Predikce"), size = 1.2,
linetype = "dashed") +
scale_color_manual(values = c("Skutečnost" = "#073061",
"Predikce" = "#2166AD")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = percent_format(accuracy = 0.1)) +
labs(
title = expression("Gap X"),
x = "Datum",
y = "Hodnota",
color = NULL,
caption = "Zdroj: vlastní výpočty"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "bottom",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust = 0, face = "italic", size = 10)
)
combined_forecast <- diff_var_forecast / gap_var_forecast +
plot_annotation(
title = "Jednokrokové predikce Diff VAR vs Gap VAR",
theme = theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 16)
)
)
print(combined_forecast)
ggsave(filename = "grafy/forecast2.png", plot = combined_forecast,
width = 13, height = 10, dpi = 300)
# Cyhyb predikci
mse_diff <- mean(forecast_errors_diff^2, na.rm = TRUE)
mae_diff <- mean(abs(forecast_errors_diff), na.rm = TRUE)
mse_gap <- mean(forecast_errors_gap^2, na.rm = TRUE)
mae_gap <- mean(abs(forecast_errors_gap), na.rm = TRUE)
better_mse_model <- if (mse_diff < mse_gap) "Diff VAR" else "Gap VAR"
better_mae_model <- if (mae_diff < mae_gap) "Diff VAR" else "Gap VAR"
sd_actual_diff <- sd(actual_diff, na.rm = TRUE)
rel_error_diff <- mae_diff / sd_actual_diff
sd_actual_gap <- sd(actual_gap, na.rm = TRUE)
rel_error_gap <- mae_gap / sd_actual_gap
sink("tabulky/forecast_modelu2.txt", append = TRUE)
cat("--------------------------------------------------\n")
cat("Predikční výkonnost modelů (jednokroková predikce)\n")
cat("--------------------------------------------------\n")
cat("Diff VAR model:\n")
cat(" - MSE:", round(mse_diff, 4), "\n")
cat(" - MAE:", round(mae_diff, 4), "\n\n")
cat("Gap VAR model:\n")
cat(" - MSE:", round(mse_gap, 4), "\n")
cat(" - MAE:", round(mae_gap, 4), "\n\n")
cat("Srovnání:\n")
cat(" - Nižší MSE má:", better_mse_model, "\n")
cat(" - Nižší MAE má:", better_mae_model, "\n\n")
cat("Průměrná absolutní chyba Diff modelu:", round(rel_error_diff, 4), "\n")
cat("Průměrná absolutní chyba Gap modelu:", round(rel_error_gap, 4), "\n\n")
cat("--------------------------------------------------\n\n")
sink()
